# requires:
# - oraclejdk
# - elasticsearch
---
- name: Add Elasticsearch apt key.
  apt_key:
    url: http://packages.elasticsearch.org/GPG-KEY-elasticsearch
    state: present

- name: Add Logstash repository.
  apt_repository:
    repo: 'deb http://packages.elasticsearch.org/logstash/2.3/debian stable main'
    state: present

- name: ensure logstash has a logging dir at {{ logstash_log_dir }}
  file: path={{ logstash_log_dir }} owner=root group=logstash mode=0775 state=directory

- name: ensure logstash has a configure dir at {{ logstash_app_dir }}
  file: path={{ logstash_app_dir }}/etc owner=root group=root mode=0755 state=directory

- name: ensure logstash has a configure dir at {{ logstash_data_dir }}
  file: path={{ logstash_data_dir }} owner=root group=root mode=0777 state=directory

- name: ensure logstash has a folder for storing logs
  file: path={{ logstash_app_dir }}/all_logs owner=root group=root mode=0777 state=directory

- name: Check if Logstash is already installed.
  stat: path=/etc/init.d/logstash
  register: logstash_installed

- name: Update apt cache if repository just added.
  apt: update_cache=yes
  when: logstash_installed.stat.exists == false

- name: Install Logstash.
  apt: pkg=logstash state=present

- name: Add Logstash user to adm group (Debian).
  user:
    name: logstash
    group: logstash
    groups: adm
  when: ansible_os_family == "Debian"
  notify: restart logstash

- name: Overwrite some default configuration files.
  template:
    src: "logstash.init.j2"
    dest: "/etc/default/logstash"
    owner: logstash
    group: logstash
    mode: 0644
  notify: restart logstash

- name: Create Logstash configuration files.
  template:
    src: "logstash.conf.j2"
    dest: "{{ logstash_app_dir }}/etc/logstash.conf"
    owner: logstash
    group: logstash
    mode: 0644
  notify: restart logstash

- name: Checkout logstash rotation scripts
  git: repo={{ logstash_scripts_repo }} dest={{ logstash_app_dir }}/share/logstash-elasticsearch-scripts
  when: LOGSTASH_ROTATE|bool

- name: Setup cron to run rotation
  cron: >
    user=root
    name="Elasticsearch logstash index rotation"
    hour={{ logstash_rotate_cron.hour }}
    minute={{ logstash_rotate_cron.minute }}
    job="/usr/bin/python {{ logstash_app_dir }}/share/logstash-elasticsearch-scripts/logstash_index_cleaner.py -d {{ LOGSTASH_DAYS_TO_KEEP }} > {{ logstash_log_dir }}/rotation_cron"
  when: LOGSTASH_ROTATE|bool

- name: Setup cron to run rotation
  cron: >
    user=root
    name="Elasticsearch logstash index optimization"
    hour={{ logstash_optimize_cron.hour }}
    minute={{ logstash_optimize_cron.minute }}
    job="/usr/bin/python {{ logstash_app_dir }}/share/logstash-elasticsearch-scripts/logstash_index_optimize.py -d {{ LOGSTASH_DAYS_TO_KEEP }} > {{ logstash_log_dir }}/optimize_cron"
  when: LOGSTASH_ROTATE|bool

- name: plugins | installing logstash plugins
  command: "sudo /opt/logstash/bin/logstash-plugin install {{ item }}"
  notify: "restart logstash"
  with_items:
    logstash-input-beats
    logstash-filter-multiline
    logstash-output-file

- name: Ensure Logstash is started and enabled on boot.
  service: "name=logstash state=started enabled=yes"
