# requires:
# - oraclejdk
# - elasticsearch
# - nginx
---

- name: Ensure app apt dependencies are installed
  apt: pkg={{ item }} state=installed
  with_items:
    - python-software-properties
    - git
    - nginx

- name: Ensure {{ kibana_app_dir }} exists
  file: path={{ kibana_app_dir }} state=directory owner=root group=root mode=0755

- name: Ensure subdirectories exist
  file: path={{ kibana_app_dir }}/{{ item }} owner=root group=root mode=0755 state=directory
  with_items:
    - htdocs
    - share

- name: ensure we have the specified kibana release
  get_url: url={{ kibana_url }} dest={{ kibana_app_dir }}/share/{{ kibana_file }}

- name: extract
  shell: >
    chdir={{ kibana_app_dir }}/share
    tar -xzvf {{ kibana_app_dir }}/share/{{ kibana_file }}
    creates={{ kibana_app_dir }}/share/{{ kibana_file|replace('.tar.gz','') }}
- name: install
  shell: >
    chdir={{ kibana_app_dir }}/share/{{ kibana_file|replace('.tar.gz','') }}
    cp -R * {{ kibana_app_dir }}/htdocs/

- name: copy config
  template: src=config.js.j2 dest={{ kibana_app_dir }}/htdocs/config.js

#- name: copy config
#  template: src=config.js.j2 dest={{ kibana_app_dir }}/share/{{ kibana_file }}/config/kibana.yml

- name: Ensure kibana's nginx site is in place
  template: src=nginx.conf.j2 dest=/etc/nginx/sites-available/kibana mode=0755

- name: Ensure kibana's nginx site is in place
  template: src=nginx.conf.j2 dest=/edx/app/nginx/sites-available/kibana mode=0755

#- name: Ensure kibana's htpasswd file is in place
#  copy: src=htpasswd dest=/edx/app/nginx/nginx.htpasswd mode=0644 owner=root group=root

- name: Ensure default nginx site is not enabled
  file: state=absent path=/etc/nginx/sites-enabled/default

- name: Ensure kibana nginx site is enabled
  file: state=link src=/etc/nginx/sites-available/kibana path=/etc/nginx/sites-enabled/kibana
